# https://stackoverflow.com/questions/57317501/kubernetes-modeling-jobs-cron-tasks-for-postgres-tomcat-application
apiVersion: v1
kind: ConfigMap
metadata:
  name: local-config-map
  namespace: default
data:
  # local.cfg is use for backend only
  # environment.prod.ts / environment.dev.ts is used for frontend only

    # Note that local.cfg values as the following
    # 1. dspace.ui.url: External Access Endpoint for UI
    # 2. dspace.server.url: External Access Endpoint for Server
    # 3. solr.server: Internal Access Endpoint for Solr, this endpoint is used by Dspace container only.
    # 4. db.url: External Access Endpoint for Postgres
    # 5. rest.cors.allowed-origins: The list of ip address dspace api allow to call it seperated by commas
    # ------------------------------------
    # Any frontend calls would not go to the solr directly but through the backend which would call
    # solr on its behalf

  local.cfg: |-
    dspace.dir = /dspace
    db.url = jdbc:postgresql://alp-pg-dev.postgres.database.azure.com:5432/dspace
    db.username = <DSPACE POSTGRESS ACCOUNT>
    db.password = <DSPACE POSTGRESS PASSWORD>
    dspace.hostname = dspace-demo.southeastasia.cloudapp.azure.com
    dspace.baseUrl = https://${dspace.hostname}/server
    dspace.ui.url=https://${dspace.hostname}
    dspace.server.url=https://${dspace.hostname}/server
    solr.server=http://localhost:8983/solr
    useProxies = true
    proxies.trusted.include_ui_ip = true
    proxies.trusted.ipranges = 172.23.0, 10.0.56, 10.0.0, 40.119.235
    rest.cors.allowed-origins = https://${dspace.hostname}, ${dspace.ui.url}, http://localhost:4000, https://localhost:4000, http://localhost:8080, http://dspace-service:4000, http://dspace-service:8080, ${dspace.hostname}, https://localhost:9000, https://localhost:5000

  # Accessing it through the browser, the connection would be redirected to the frontend pod container where using the
  # env defined in this file (environment.prod.ts), get the rest's address and query there

    # Note that environment values as the following
    # 1. Rest Config: The external endpoint for the rest api
    # 2. UI Config: The internal endpoint for the UI (This is your localhost)
    # Replace the host with your own located for Rest endpoint (E.g dspace-demo.southeastasia.cloudapp.azure.com)
  environment.dev.ts: |-
    export const environment = {
      rest: {
        ssl: true,
        host: '',
        port: 80,
        // NOTE: Space is capitalized because 'namespace' is a reserved string in TypeScript
        nameSpace: '/server'
      },
      ui: {
        ssl: false,
        host: '0.0.0.0',
        port: 4000,
        nameSpace: '/'
      }
    };